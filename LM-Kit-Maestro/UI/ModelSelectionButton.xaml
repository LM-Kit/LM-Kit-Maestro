<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:local="clr-namespace:LMKitMaestro"
             xmlns:controls="clr-namespace:LMKitMaestro.Controls"
             xmlns:ui="clr-namespace:LMKitMaestro.UI"
             xmlns:converters="clr-namespace:LMKitMaestro.Converters"
             xmlns:models="clr-namespace:LMKitMaestro.Models"
             xmlns:vm="clr-namespace:LMKitMaestro.ViewModels"
             xmlns:services="clr-namespace:LMKitMaestro.Services"
             xmlns:icons="clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons"
             xmlns:uranium="http://schemas.enisn-projects.io/dotnet/maui/uraniumui"
             x:Class="LMKitMaestro.UI.ModelSelectionButton"
             x:DataType="vm:ChatPageViewModel"
             x:Name="modelSelectionButton">
    <Border 
        StrokeThickness="0"
        StrokeShape="RoundRectangle 4"
        Grid.Column="1"
        InputTransparent="False"
        Stroke="Transparent">
        <uranium:StatefulContentView
            Style="{StaticResource ModelSelectionButtonStyle}"
            InputTransparent="False"
            Tapped="OnModelSelectionButtonClicked">
            <uranium:StatefulContentView.Triggers>
                <DataTrigger TargetType="uranium:StatefulContentView" Binding="{Binding LmKitService.ModelLoadingState}" Value="{x:Static services:LmKitModelLoadingState.Loading}">
                    <Setter Property="InputTransparent" Value="True" />
                </DataTrigger>

                <DataTrigger TargetType="uranium:StatefulContentView" Binding="{Binding LmKitService.ModelLoadingState}" Value="{x:Static services:LmKitModelLoadingState.Loading}">
                    <Setter Property="InputTransparent" Value="True" />
                </DataTrigger>

                <DataTrigger TargetType="uranium:StatefulContentView" Binding="{Binding Source={x:RelativeSource AncestorType={x:Type vm:AppShellViewModel}}, Path=AppIsInitialized}" Value="False">
                    <Setter Property="InputTransparent" Value="True" />
                </DataTrigger>
            </uranium:StatefulContentView.Triggers>

            <Grid RowDefinitions="*, auto">
                <Grid Padding="12, 0" ColumnSpacing="8" ColumnDefinitions="24, *, 24">
                    <Button 
                        IsVisible="{Binding LmKitService.ModelLoadingState, Converter={mct:IsEqualConverter}, ConverterParameter={x:Static services:LmKitModelLoadingState.Loaded}}"
                        HeightRequest="24"
                        WidthRequest="24"
                        MinimumHeightRequest="24"
                        MaximumHeightRequest="24"
                        HorizontalOptions="Center"
                        VerticalOptions="Center"
                        BackgroundColor="{StaticResource Surface}"
                        CornerRadius="12"
                        Padding="0"
                        ToolTipProperties.Text="Eject model"
                        TextColor="{StaticResource OnSurface}"
                        Clicked="OnEjectModelButtonClicked"
                        Text="{x:Static icons:MaterialRegular.Eject}" FontFamily="MaterialSharp">
                    </Button>

                    <Label 
                        Grid.Column="1"
                        VerticalOptions="Center"
                        HorizontalTextAlignment="Center"
                        LineBreakMode="TailTruncation"
                        ToolTipProperties.Text="{Binding Source={RelativeSource Self}, Path=Text}"
                        TextColor="{StaticResource OnBackground}">
                        <Label.Triggers>
                            <!--<DataTrigger TargetType="Label">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource AllTrueConverter}">
                                                    <Binding  Source="{RelativeSource AncestorType={x:Type vm:ChatPageViewModel}}" Path="LmKitService.ModelLoadingState" Converter="{mct:IsEqualConverter}" ConverterParameter="{x:Static vm:ModelLoadingState.Loading}"/>
                                                    <Binding  Source="{RelativeSource AncestorType={x:Type vm:ChatPageViewModel}}" Path="ModelLoadingIsFinishingUp" Converter="{mct:InvertedBoolConverter}"/>
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            
                                            <Setter Property="Text" Value="Loading model..."/>
                                            <Setter Property="TextColor" Value="{StaticResource Outline}"/>
                                        </DataTrigger>

                                        <DataTrigger TargetType="Label">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource AllTrueConverter}">
                                                    <Binding  Source="{RelativeSource AncestorType={x:Type vm:ChatPageViewModel}}" Path="LmKitService.ModelLoadingState" Converter="{mct:IsEqualConverter}" ConverterParameter="{x:Static vm:ModelLoadingState.Loading}"/>
                                                    <Binding  Source="{RelativeSource AncestorType={x:Type vm:ChatPageViewModel}}" Path="ModelLoadingIsFinishingUp"/>
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter Property="Text" Value="Finishing up..."/>
                                            <Setter Property="TextColor" Value="{StaticResource Outline}"/>
                                        </DataTrigger>-->

                            <DataTrigger TargetType="Label" Binding="{Binding LmKitService.ModelLoadingState}" Value="{x:Static services:LmKitModelLoadingState.Loading}">
                                <Setter Property="TextColor" Value="{StaticResource Outline}"/>
                                <Setter Property="Text" Value="{Binding Source={x:Reference modelSelectionButton}, Path=LoadingText}"/>
                            </DataTrigger>

                            <DataTrigger TargetType="Label" Binding="{Binding LmKitService.ModelLoadingState}" Value="{x:Static services:LmKitModelLoadingState.Loaded}">
                                <Setter Property="Text" Value="{Binding SelectedModel.Name}"/>
                            </DataTrigger>

                            <DataTrigger TargetType="Label" Binding="{Binding LmKitService.ModelLoadingState}" Value="{x:Static services:LmKitModelLoadingState.Unloaded}">
                                <Setter Property="Text" Value="Select a model to load"/>
                            </DataTrigger>

                            <DataTrigger TargetType="Label" Binding="{Binding Source={x:RelativeSource AncestorType={x:Type vm:AppShellViewModel}}, Path=AppIsInitialized}" Value="False">
                                <Setter Property="TextColor" Value="{StaticResource Outline}"/>
                                <Setter Property="Text" Value="Chat Playground is initializing..."/>
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>

                    <Label 
                        IsVisible="{Binding LmKitService.ModelLoadingState, Converter={mct:IsNotEqualConverter}, ConverterParameter={x:Static services:LmKitModelLoadingState.Loading}}"
                        BackgroundColor="Transparent"
                        HorizontalOptions="End"
                        Grid.Column="2"
                        VerticalOptions="Center"
                        FontFamily="MaterialRegular"
                        TextColor="{StaticResource OnSurface}"
                        Text="{x:Static icons:MaterialRegular.Keyboard_arrow_down}">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding Source={x:RelativeSource AncestorType={x:Type vm:AppShellViewModel}}, Path=AppIsInitialized}" Value="False">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                </Grid>

                <ProgressBar 
                    Grid.ColumnSpan="3"
                    IsVisible="{Binding LmKitService.ModelLoadingState, Converter={mct:IsEqualConverter}, ConverterParameter={x:Static services:LmKitModelLoadingState.Loading}}"
                    VerticalOptions="End"
                    Grid.Row="1"
                    ProgressColor="{StaticResource Outline}" 
                    Progress="{Binding LoadingProgress}"/>
            </Grid>
        </uranium:StatefulContentView>
    </Border>
</ContentView>
