<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:local="clr-namespace:LMKitMaestro"
             xmlns:controls="clr-namespace:LMKitMaestro.Controls"
             xmlns:ui="clr-namespace:LMKitMaestro.UI"
             xmlns:converters="clr-namespace:LMKitMaestro.Converters"
             xmlns:models="clr-namespace:LMKitMaestro.Models"
             xmlns:vm="clr-namespace:LMKitMaestro.ViewModels"
             xmlns:services="clr-namespace:LMKitMaestro.Services"
             x:Class="LMKitMaestro.UI.ModelSelectionButton"
             x:DataType="vm:ModelListViewModel"
             x:Name="modelSelectionButton">

    <ContentView.Resources>
        <ResourceDictionary>
            <Style x:Key="EjectButtonStyle" TargetType="Button">
                <Setter Property="HeightRequest" Value="24"/>
                <Setter Property="WidthRequest" Value="24"/>
                <Setter Property="MinimumHeightRequest" Value="24"/>
                <Setter Property="MinimumWidthRequest" Value="24"/>
                <Setter Property="HorizontalOptions" Value="Center"/>
                <Setter Property="CornerRadius" Value="12"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="ToolTipProperties.Text" Value="Eject model"/>
                <Setter Property="TextColor" Value="{StaticResource Primary}"/>
                <Setter Property="FontFamily" Value="FASolid"/>
                <Setter Property="FontSize" Value="9"/>
                <Setter Property="Text" Value="{StaticResource Eject}"/>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Surface2}"/>
                                </VisualState.Setters>
                            </VisualState>

                            <VisualState x:Name="Pressed">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Surface3}"/>
                                </VisualState.Setters>
                            </VisualState>

                            <VisualState x:Name="Hover">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Surface3}"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <Style x:Key="ModelSelectionButtonStyle" TargetType="controls:StatefulContentView">
                <Style.Triggers>
                    <DataTrigger TargetType="controls:StatefulContentView" Binding="{Binding LmKitService.ModelLoadingState}" Value="{x:Static services:LmKitModelLoadingState.Loading}">
                        <Setter Property="InputTransparent" Value="True" />
                    </DataTrigger>

                    <DataTrigger TargetType="controls:StatefulContentView" Binding="{Binding Source={x:RelativeSource AncestorType={x:Type vm:AppShellViewModel}}, Path=AppIsInitialized}" Value="False">
                        <Setter Property="InputTransparent" Value="True" />
                    </DataTrigger>
                </Style.Triggers>

                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Surface2}"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Surface}"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="PointerOver">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Surface}"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </ContentView.Resources>

    <Border 
        StrokeThickness="1"
        StrokeShape="RoundRectangle 4"
        Grid.Column="1"
        InputTransparent="False"
        Stroke="{StaticResource Surface4}">
        <Border.Triggers>
            <DataTrigger TargetType="Border" Binding="{Binding LmKitService.ModelLoadingState}" Value="{x:Static services:LmKitModelLoadingState.Loaded}">
                <Setter Property="Stroke" Value="{StaticResource Primary}" />
            </DataTrigger>
        </Border.Triggers>

        <controls:StatefulContentView
            Style="{StaticResource ModelSelectionButtonStyle}"
            InputTransparent="False"
            Hovered="OnModelSelectionButtonHovered"
            HoverExited="OnModelSelectionButtonHoveredExited"
            Tapped="OnModelSelectionButtonClicked">
            <Grid RowDefinitions="*, auto">
                <Grid Padding="12, 0" ColumnSpacing="8" ColumnDefinitions="24, *, 24">
                    <Button 
                        Style="{StaticResource EjectButtonStyle}"
                        IsVisible="{Binding LmKitService.ModelLoadingState, Converter={mct:IsEqualConverter}, ConverterParameter={x:Static services:LmKitModelLoadingState.Loaded}}"
                        Clicked="OnEjectModelButtonClicked">
                    </Button>

                    <Label 
                        Grid.Column="1"
                        VerticalOptions="Center"
                        HorizontalTextAlignment="Center"
                        LineBreakMode="TailTruncation"
                        ToolTipProperties.Text="{Binding Source={RelativeSource Self}, Path=Text}"
                        TextColor="{StaticResource OnBackground}">
                        <Label.Triggers>
                            <!--<DataTrigger TargetType="Label">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource AllTrueConverter}">
                                                    <Binding  Source="{RelativeSource AncestorType={x:Type vm:ChatPageViewModel}}" Path="LmKitService.ModelLoadingState" Converter="{mct:IsEqualConverter}" ConverterParameter="{x:Static vm:ModelLoadingState.Loading}"/>
                                                    <Binding  Source="{RelativeSource AncestorType={x:Type vm:ChatPageViewModel}}" Path="ModelLoadingIsFinishingUp" Converter="{mct:InvertedBoolConverter}"/>
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            
                                            <Setter Property="Text" Value="Loading model..."/>
                                            <Setter Property="TextColor" Value="{StaticResource Outline}"/>
                                        </DataTrigger>

                                        <DataTrigger TargetType="Label">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource AllTrueConverter}">
                                                    <Binding  Source="{RelativeSource AncestorType={x:Type vm:ChatPageViewModel}}" Path="LmKitService.ModelLoadingState" Converter="{mct:IsEqualConverter}" ConverterParameter="{x:Static vm:ModelLoadingState.Loading}"/>
                                                    <Binding  Source="{RelativeSource AncestorType={x:Type vm:ChatPageViewModel}}" Path="ModelLoadingIsFinishingUp"/>
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter Property="Text" Value="Finishing up..."/>
                                            <Setter Property="TextColor" Value="{StaticResource Outline}"/>
                                        </DataTrigger>-->

                            <DataTrigger TargetType="Label" Binding="{Binding LmKitService.ModelLoadingState}" Value="{x:Static services:LmKitModelLoadingState.Loading}">
                                <Setter Property="TextColor" Value="{StaticResource Outline}"/>
                                <Setter Property="Text" Value="{Binding Source={x:Reference modelSelectionButton}, Path=LoadingText}"/>
                            </DataTrigger>

                            <DataTrigger TargetType="Label" Binding="{Binding LmKitService.ModelLoadingState}" Value="{x:Static services:LmKitModelLoadingState.Loaded}">
                                <Setter Property="Text" Value="{Binding SelectedModel.Name}"/>
                            </DataTrigger>

                            <DataTrigger TargetType="Label" Binding="{Binding LmKitService.ModelLoadingState}" Value="{x:Static services:LmKitModelLoadingState.Unloaded}">
                                <Setter Property="Text" Value="Select a model to load"/>
                            </DataTrigger>

                            <DataTrigger TargetType="Label" Binding="{Binding Source={x:RelativeSource AncestorType={x:Type vm:AppShellViewModel}}, Path=AppIsInitialized}" Value="False">
                                <Setter Property="TextColor" Value="{StaticResource Outline}"/>
                                <Setter Property="Text" Value="Chat Playground is initializing..."/>
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>

                    <Label 
                        IsVisible="{Binding LmKitService.ModelLoadingState, Converter={mct:IsNotEqualConverter}, ConverterParameter={x:Static services:LmKitModelLoadingState.Loading}}"
                        BackgroundColor="Transparent"
                        HorizontalOptions="End"
                        Grid.Column="2"
                        VerticalOptions="Center"
                        StyleClass="IconSmall"
                        TextColor="{StaticResource Outline}"
                        Text="{StaticResource ChevronDown}">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding Source={x:RelativeSource AncestorType={x:Type vm:AppShellViewModel}}, Path=AppIsInitialized}" Value="False">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                </Grid>

                <!--IsVisible="{Binding LmKitService.ModelLoadingState, Converter={mct:IsEqualConverter}, ConverterParameter={x:Static services:LmKitModelLoadingState.Loading}}"-->
                <ProgressBar 
                    Grid.ColumnSpan="3"
                    VerticalOptions="End"
                    Grid.Row="1"
                    Progress="{Binding LoadingProgress}"
                    
                    BackgroundColor="{StaticResource Surface2}"
                    ProgressColor="{StaticResource Primary}" 
                    />
            </Grid>
        </controls:StatefulContentView>
    </Border>
</ContentView>
